Making development easier
 - Configure mudmux scripts directory path, rather than installed path
 - relaunch flag, for use once env is already set but tintin has been closed with #end
 - make it easier to clean up tmux. with -CC I often detatch but really just want to kill

Remaining script reorganization
 - consider a constants module?
 - add ability for multiple, named chat connections
 - gracefully handle different script dir trees i.e. for different games?
 - verbosity of script logs
 - treat stored.log like communications.log
 - pull out mudmux-linked components from splitprompt (e.g. as in context.tt)
 - separate core medievia/chat.tt logic from enablement for reps

Longer term tasks:

 - continue to improve docker usage
    - switch back to alpine? (segfaults with #chat call)
    - use a normal user; don't like running as root
    - the usage of /home/files is weird. should audit and clean up volumes...

 - additional tmuxp improvements
    - maybe switch to tmuxinator??
    - can't use -CC directly with tmuxp, need to create a detached and then attach with tmux -CC
      - consider pushing changes to upstream tmuxp to add this functionality
      - https://github.com/tmux-python/tmuxp/issues/171
    - "no previous window" error from tmux
      - currently addressed by pinning the version of tmuxp==1.3.2, has workarounds and issues:
        - https://github.com/tmux-python/tmuxp/issues/364#issuecomment-584617782
      - note adding a second window in the background may address this

Updates to README
 - Add a section on how to leverage mudmux features when scripting

Other iTerm-related changes
 - package a portable iterm profile?
 - use a tmux conf for cases where iterm integration isn't available
 - warn on non UTF-8 LANG env var instead of cryptic session_id message from tmuxp