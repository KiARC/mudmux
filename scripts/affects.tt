#no muxmed module affects.tt;
@_module{affects};

@_require{context};

#no todo: use booleans instead of off/on;
#no todo: need to clean up spellup aliases;

#variable track_affects off;

#alias {init_affects} {

    #var affects {};

    #var affects[Armor               ] { {ticks}{0} {messages}{} };
    #var affects[Bless               ] { {ticks}{0} {messages}{} };
    #var affects[Shield              ] { {ticks}{0} {messages}{} };
    #var affects[Strength            ] { {ticks}{0} {messages}{} };
    #var affects[Invisibility        ] { {ticks}{0} {messages}{} };
    #var affects[Detect Invisibility ] { {ticks}{0} {messages}{} };
    #var affects[Quickness           ] { {ticks}{0} {messages}{} };
    #var affects[Infravision         ] { {ticks}{0} {messages}{} };
    #var affects[Sense Life          ] { {ticks}{0} {messages}{} };
    #var affects[Levitate            ] { {ticks}{0} {messages}{} };
    #var affects[Sanctuary           ] { {ticks}{0} {messages}{} };

    #if { "$char_class" == "Mage" } {
        #var affects[Stone Skin          ] { {ticks}{0} {messages}{} };
    };

    #if { "$char_align" == "good" } {
        #var affects[Protection from Evil] { {ticks}{0} {messages}{} };
    };

    #if { "$char_align" == "evil" } {
        #var affects[Protection from Good] { {ticks}{0} {messages}{} };
    };
    
};

#alias {af} {explicit af};
#gag {[BEGIN af]};
#gag {[END af]};

#action {[BEGIN af]} {
    #variable track_affects on;
    init_affects;
};

#action {[END af]} {
    #variable track_affects off;

    #foreach $affects[] {a} {

        #var ticks $affects[$a][ticks];
        #var messages $affects[$a][messages];

        #if {$ticks > 3} {
            #showme {  <149>$a<149>:<099> Duration - $ticks ticks$messages};
            #continue;
        };

        #if {$ticks > 1} {
            #showme {  <139>$a<149>:<099> Duration - $ticks ticks$messages};
            #continue;
        };

        #if {$ticks == 1} {
            #showme {  <139>$a<149>:<099> Duration - $ticks tick$messages};
            #continue;
        };

        #if {"$ticks" == "fading"} {
            #showme {  <119>$a<149>:<099> Duration - fading$messages};
            #continue;
        };

        #showme {  <119>$a<099>};

    };

};


#alias process_affect {
    #if { "$track_affects" == "on"} {

        #variable affect {%1};
        #variable ticks {%2};
        #variable message {%3};

        #variable new_message {};
        #if {"$message" != ""} {
            #variable cur_message {$affects[$affect][messages]};
            #variable new_message {$cur_message,$message};
        };

        #variable affects[$affect] { {ticks}{$ticks} {messages}{$new_message} };
	    
        #line gag;
    };
};


#action {  %1: Duration - %2 ticks,%3} {
    process_affect {%1} {%2} {%3};
} {1};

#action {  %1: Duration - %2 tick,%3} {
    process_affect {%1} {%2} {%3};
} {1};

#action {  %1: Duration - %2 ticks} {
    process_affect {%1} {%2} {};
} {2};

#action {  %1: Duration - %2 tick} {
    process_affect {%1} {%2} {};
} {3};

#action {  %1: Duration - fading} {
    process_affect {%1} {fading} {};
} {3};

#action {  %1: Duration - fading,%2} {
    process_affect {%1} {fading} {%2};
} {3};


#no;
#no Alias for preparing all spells;
#no;

#alias {spellup} {
       c armor;
       c bless;
       c lev;
       c quick;
       c d i;
       c sense li;
       c infra;
       c inv;
       c shield;
       c stren;
};

#alias {quickspell} {
       c d i;
       c armor;
       c bless;
       c shield;
       c q; 
       c stren;
};

#alias {smartspell} {
    #foreach $affects[] {a} {

        #var ticks $affects[$a][ticks];
        #var messages $affects[$a][messages];

        #if {$ticks < 3} {
            #showme {Casting $a};
            cast $a;
        };

    };

    af;

};